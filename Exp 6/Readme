NAME - PARAS MANAK 
UID - 23BAI70596
SECTION - 23AML-9(B)


EXPERIMENT-6 [THE DRAWING TOOL]


1. HTML (Structure of the Page)
HTML provides the skeleton of the tool. Think of it as the blueprint.
Main Tags:
<html>: Root of the page, contains everything.
<head> : Holds the title (shown in the browser tab) and the CSS styling rules.
<body> : Contains what the user sees and interacts with.
Inside the Body:
<h2>: Heading to show the title of the tool, e.g., ‚ÄúSVG Drawing Tool‚Äù.
<svg> : The drawing area (canvas).
This is an empty container where drawings appear.
Width and height define the size.
<path> (created dynamically) : Represents the user‚Äôs drawing strokes inside the SVG.
d attribute stores the drawing commands (M for move, L for line).
stroke, stroke-width, and fill control the appearance.
So HTML defines the page layout: a heading + an SVG drawing aea.
2. CSS (Styling the Page)
CSS makes the tool look clean and user-friendly.
Example Styling:
svg { border: 5px blue; } :Adds a visible border around the canvas.
background: white; :Gives the canvas a background so drawings stand out.
cursor: crosshair; :Shows a crosshair cursor inside the canvas for precision.

CSS‚Äôs role is only to make the interface nice and usable.
Without CSS, the tool would still work, but it would look plain.

3. JavaScript (Interactivity & Logic)
JavaScript is the brain of the tool.
It makes the static SVG interactive by handling mouse events.
Key Parts:
Variables
A reference to the SVG canvas.
A flag to check if the user is currently drawing (mouse pressed).
A variable to store the current path being drawn.
Event Listeners (on the SVG canvas):
mousedown ‚Üí Start drawing.
Create a new <path>.
Move the drawing cursor to the mouse‚Äôs position (M x y).
mousemove ‚Üí Continue drawing.
Extend the path with new line segments (L x y) as the mouse moves.
mouseup ‚Üí Stop drawing.
Finish the current path and reset the flag.
Helper Functions
A function to create a path element with stroke color, thickness, and no fill.
A function to get mouse position relative to the SVG (so it doesn‚Äôt use screen coordinates).

JavaScript‚Äôs role is to:
Watch what the user does with the mouse.
Update the SVG in real-time.
Allow freehand drawing, not just static shapes.


üîó How They Work Together
HTML creates the canvas (<svg>) where drawings go.
CSS makes the canvas look like a real drawing area (border, background, cursor).
JavaScript brings it to life:
Detects when you press, move, and release the mouse.
Adds <path> elements inside the SVG as you draw.
Keeps updating those paths so your movement appears as smooth strokes.
